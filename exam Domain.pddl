(define (domain gripper-strips)
(:requirements :strips)
(:predicates (at ?b ?r)
             (corridor ?r1 ?r2)
             (room ?r)
             (at-robby ?r)
             (gripper ?g)
             (carry ?o ?g)
             (object ?b)
             (free ?g))
       (:action move
             :parameters (?from ?to)
             :precondition (and (room ?from) (room ?to) (at-robby ?from)(corridor ?from ?to))
             :effect (and (at-robby ?to)
             (not (at-robby ?from))))
       (:action pick
             :parameters (?obj ?room ?gripper)
             :precondition (and (object ?obj) (room ?room) (gripper ?gripper)
             (at ?obj ?room) (at-robby ?room) (free ?gripper))
             :effect (and (carry ?obj ?gripper)
             (not (at ?obj ?room))
             (not (free ?gripper))))
       (:action drop
             :parameters (?obj ?room ?gripper)
             :precondition (and (object ?obj) (room ?room) (gripper ?gripper)
             (carry ?obj ?gripper) (at-robby ?room))
             :effect (and (at ?obj ?room)
             (free ?gripper)
             (not (carry ?obj ?gripper)))))